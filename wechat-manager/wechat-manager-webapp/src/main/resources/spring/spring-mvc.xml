<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:mvc="http://www.springframework.org/schema/mvc"
       xmlns:context="http://www.springframework.org/schema/context"
       xsi:schemaLocation="http://www.springframework.org/schema/beans
            http://www.springframework.org/schema/beans/spring-beans-4.3.xsd
            http://www.springframework.org/schema/mvc
			http://www.springframework.org/schema/mvc/spring-mvc-4.3.xsd
            http://www.springframework.org/schema/context
            http://www.springframework.org/schema/context/spring-context-4.3.xsd">
    <!--上面的xsd最好和当前使用的Spring版本号一致,如果换了Spring版本,这个最好也跟着改-->

    <!--启动注解驱动的Spring MVC功能，注册DefaultAnnotationHandlerMapping
     	与AnnotationMethodHandlerAdapter 两个bean,是spring MVC为@Controller、@RequestMapping分发请求所必须的
     -->
    <mvc:annotation-driven />

    <!--向 Spring 容器注册AutowiredAnnotationBeanPostProcessor、CommonAnnotationBeanPostProcessor、
		PersistenceAnnotationBeanPostProcessor 以及 RequiredAnnotationBeanPostProcessor 这 4 个BeanPostProcessor
		以便于使用(@Autowired)、(@Resource、@PostConstruct、@PreDestroy)、(@PersistenceContext)、(@Required)注解
      -->
    <context:annotation-config />

    <!--启动包扫描功能，以便使带有@Controller、@Service、@Repository、@Component等注解的类成为spring的bean，
     	该配置项其实也包含了自动注入上述Processor的功能，因此当使用 <context:component-scan/> 后，就可以将 <context:annotation-config /> 移除
     -->
    <context:component-scan base-package="cn.com.ccyw.**.controller" />

    <!--静态资源映射-->
    <!--参考：http://perfy315.iteye.com/blog/2008763
        mapping="/js/**"
        表示当浏览器有静态资源请求的时候，并且请求url路径中带有：/js/，则这个资源跑到webapp目录下的/WEB-INF/statics/js/去找
        比如我们在 JSP 中引入一个 js 文件：src="${webRoot}/js/jQuery-core/jquery-1.6.1.min.js
    -->
    <mvc:resources mapping="/css/**" location="/WEB-INF/statics/css" />
    <mvc:resources mapping="/js/**" location="/WEB-INF/statics/js" />
    <mvc:resources mapping="/images/**" location="/WEB-INF/statics/images" />

    <!--对模型视图名称的解析，即在模型视图名称添加前后缀(如果最后一个还是表示文件夹,则最后的斜杠不要漏了) 使用JSP-->
    <!--默认的视图解析器 在上边的解析错误时使用 (默认使用html)-->
    <bean id="defaultViewResolver" class="org.springframework.web.servlet.view.InternalResourceViewResolver">
        <property name="viewClass" value="org.springframework.web.servlet.view.JstlView" />
        <property name="prefix" value="/WEB-INF/view/" /><!--设置JSP文件的目录位置-->
        <property name="suffix" value=".jsp" />
    </bean>

    <!--文件上传 start-->
    <!--配置文件上传，如果没有使用文件上传可以不用配置，当然如果不配，那么配置文件中也不必引入上传组件包-->
    <bean id="multipartResolver" class="org.springframework.web.multipart.commons.CommonsMultipartResolver">
        <property name="defaultEncoding" value="UTF-8" />
        <property name="maxUploadSize" value="10485760" />
        <property name="maxInMemorySize" value="4096" />
    </bean>
    <!--文件上传 end-->
</beans>